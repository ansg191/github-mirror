name: Release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  build-x86_64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libcurl4-openssl-dev \
            libcmocka-dev \
            libcjson-dev

      - name: Build and Package
        run: |
          cmake -B ${{ steps.strings.outputs.build-output-dir }} \
            -DCMAKE_BUILD_TYPE=Release \
            -S ${{ github.workspace }}
          cmake --build ${{ steps.strings.outputs.build-output-dir }} --config Release
          cpack -G DEB --config ${{ steps.strings.outputs.build-output-dir }}/CPackConfig.cmake
          for file in *.deb; do
            mv "$file" "${file%.deb}-x86_64.deb"
          done

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: 'x86_64-deb'
          path: '*.deb'

  build-aarch64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Replace apt sources
        run: |
          sudo tee /etc/apt/sources.list.d/ubuntu.sources <<EOF
          Types: deb
          URIs: http://azure.archive.ubuntu.com/ubuntu/
          Suites: noble noble-updates noble-backports
          Components: main universe restricted multiverse
          Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg
          Architectures: amd64

          ## Ubuntu security updates. Aside from URIs and Suites,
          ## this should mirror your choices in the previous section.
          Types: deb
          URIs: http://azure.archive.ubuntu.com/ubuntu/
          Suites: noble-security
          Components: main universe restricted multiverse
          Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg
          Architectures: amd64

          ## ARM64 packages
          Types: deb
          URIs: http://azure.ports.ubuntu.com/
          Suites: noble noble-updates noble-backports
          Components: main universe restricted multiverse
          Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg
          Architectures: arm64
          EOF

      - name: Install deps
        run: |
          sudo dpkg --add-architecture arm64
          sudo apt-get update
          sudo apt-get install -y \
            gcc-aarch64-linux-gnu g++-aarch64-linux-gnu \
            libcurl4-openssl-dev:arm64 \
            libcmocka-dev:arm64 \
            libcjson-dev:arm64

      - name: Build and Package
        run: |
          cmake -B ${{ steps.strings.outputs.build-output-dir }} \
              -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc \
              -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++ \
              -DCMAKE_FIND_ROOT_PATH=/usr/aarch64-linux-gnu \
              -DCMAKE_BUILD_TYPE=Release \
              -S ${{ github.workspace }}
          cmake --build ${{ steps.strings.outputs.build-output-dir }} --config Release
          cpack -G DEB --config ${{ steps.strings.outputs.build-output-dir }}/CPackConfig.cmake
          for file in *.deb; do
            mv "$file" "${file%.deb}-aarch64.deb"
          done

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: 'aarch64-deb'
          path: '*.deb'

  release:
    runs-on: ubuntu-latest
    needs:
      - build-aarch64
      - build-x86_64
    steps:
      - name: Download aarch64 Binary
        uses: actions/download-artifact@v4
        with:
          name: aarch64-deb
          path: binaries/

      - name: Download x86_64 Binary
        uses: actions/download-artifact@v4
        with:
          name: x86_64-deb
          path: binaries/

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            binaries/*.deb
